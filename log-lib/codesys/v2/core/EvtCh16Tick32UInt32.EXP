
(* @NESTEDCOMMENTS := 'No' *)
(* @PATH := '\/core\/evt' *)
(* @OBJECTFLAGS := '0, 8' *)
(* @SYMFILEFLAGS := '2048' *)
FUNCTION EvtCh16Tick32UInt32 : BOOL
VAR_INPUT
    Channel: UINT;
    Tick: UDINT;
    Value: UDINT;
END_VAR
VAR_IN_OUT
    Handle: LogBufferHandle;
END_VAR
VAR
    i: DINT;
    p1: POINTER TO BYTE;
    p2: POINTER TO BYTE;
    p3: POINTER TO UDINT;
    p4: POINTER TO UDINT;
END_VAR
(* @END_DECLARATION := '0' *)
i := GetNextWritePointer(18, Handle.BufferWritePointer, Handle.BufferReadPointer, Handle.BufferSize, Handle.BufferOverflow);
IF i >= 0 THEN

    p1 := Handle.BufferAddress + DINT_TO_DWORD(i);
    p1^ := START_FLAG;

    p1 := p1 + 1;
    p1^ := Handle.MagicByte;

    p1 := p1 + 1;
    p1^ := EVT_CH16_TICK32_UINT32;

    p1 := p1 + 1;
    p2 := ADR(Channel);
    p1^ := p2^;

    p1 := p1 + 1;
    p2 := p2 + 1;
    p1^ := p2^;

    p3 := p1 + 1;
    p3^ := Tick;

    p4 := p1 + 5;
    p4^ := Value;

    p1 := p1 + 9;
    p1^ := END_FLAG;

    Handle.BufferWritePointer := DWORD_TO_DINT(p1 - Handle.BufferAddress);

ELSE
    EvtFull(Handle);
END_IF
END_FUNCTION
